let message = 123 // "Hello SwiftFMI!"
var variable = "Hello"
variable += " Swift FMI!"
// variable += 123
// print(message)
print(variable)

/*


*/

var temperature = -1
 temperature += 33
if temperature <= 0 {
    print("–ú–Ω–æ–≥–æ –µ —Å—Ç—É–¥–µ–Ω–æ. –û–±–ª–µ—á–µ—Ç–µ —Å–µ —Ç–æ–ø–ª–æ.")
} else if temperature > 30 {
    print("!(–ú–Ω–æ–≥–æ –µ —Å—Ç—É–¥–µ–Ω–æ).")
}


    let someNumber: Int = 1
    switch (someNumber) {
    // case 1:
    //     print("–ï–¥–Ω–æ")
    //     fallthrough
    case 1, 3:
        print("–¢—Ä–∏")
    default:
        print("–ù—è–∫–∞–∫–≤–æ –¥—Ä—É–≥–æ —á–∏—Å–ª–æ")
    }

    let count = 34
    let things = "—è–±—ä–ª–∫–∏"
    var expression: String
    switch count {
    case 0:
        expression = "–Ω–∏–∫–æ–ª–∫–æ"
    case 1..<10:
        expression = "–Ω—è–∫–æ–ª–∫–æ"
    case 10..<100:
        expression = "–¥–µ—Å–µ—Ç–∫–∏"
    case 100..<1000:
        expression = "—Å—Ç–æ—Ç–∏—Ü–∏"
    default:
        expression = "–º–Ω–æ–≥–æ"
    }
    print("\(count) —Å–∞ \(expression) \(things)")

    // let point = (x: 1, y: 1)
    // switch point {    
    // case (0, 0):
    //     print("—Ç–æ—á–∫–∞ (0, 0) –µ –≤ –Ω–∞—á–∞–ª–æ—Ç–æ –Ω–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞")
    // case (_, 0):
    //     print("—Ç–æ—á–∫–∞ (\(point.x), 0) —Å–µ –Ω–∞–º–∏—Ä–∞ –Ω–∞ –∞–±—Å—Ü–∏—Å–∞ —Ö")
    // case (0, _):
    //     print("—Ç–æ—á–∫–∞ (0, \(point.1)) —Å–µ –Ω–∞–º–∏—Ä–∞ –Ω–∞ –∞–±—Å—Ü–∏—Å–∞ —É")
    // case (-2...2, -2...2):
    //     print("—Ç–æ—á–∫–∞ (\(point.0), \(point.1)) –µ –≤ –∫–≤–∞–¥—Ä–∞—Ç–∞")
    // default:    
    //     print("—Ç–æ—á–∫–∞ (\(point.0), \(point.1)) –µ –∏–∑–≤—ä–Ω –∫–≤–∞–¥—Ä–∞—Ç–∞")
    // }

    let point = (0, 1)
    switch point {
    case (let x, 0):
        print("—Ç–æ—á–∫–∞ (\(x), 0) —Å–µ –Ω–∞–º–∏—Ä–∞ –Ω–∞ –∞–±—Å—Ü–∏—Å–∞ —Ö")
    case (0, let y):
        print("—Ç–æ—á–∫–∞ (0, \(y)) —Å–µ –Ω–∞–º–∏—Ä–∞ –Ω–∞ –æ—Ä–¥–∏–Ω–∞—Ç–∞ —É")
    case let (x, y):
        print("—Ç–æ—á–∫–∞ (\(x), \(y)) –µ –Ω—è–∫—ä–¥–µ –¥—Ä—É–≥–∞–¥–µ")
    }
    let range = 1...5
    let range2 = [1, 2, 3, 4, 5]
    // for (index, element) in range2.enumerated() {
    //     print("\(index) –ø–æ 5 –µ \(index * 5)")
    // }


    let base = 3
    let power = 10
    var answer = 1
    for _ in 1...power {
        answer *= base
    }
    print("\(base) –Ω–∞ —Å—Ç–µ–ø–µ–Ω \(power) –µ \(answer)")

    let names = ["–ï–º–∏–ª", "–°–ø–∞—Å", "–ò–≤–∞–Ω", "–ì–æ—à–æ"]
    for name in names {
        print("–ó–¥—Ä–∞–≤–µ–π, \(name + "!!!!")!")
    }

    let numberOfLegs: Dictionary<String, Int> = [ "–ø–∞—è—Ü–∏": 8, "–º—Ä–∞–≤–∫–∏": 6, "–∫–æ—Ç–∫–∏": 4]
    for (animalName, legCount) in numberOfLegs {
        print("\(animalName)—Ç–µ –∏–º–∞—Ç \(legCount) –∫—Ä–∞–∫–∞")
    }

    // number_of_legs

    let –ø–æ–∑–¥—Ä–∞–≤ = "–ó–¥—Ä–∞–≤–µ–π, —Å–≤—è—Ç!"
    print("–ü—ä—Ä–≤–∏—è—Ç —Å–∏–º–≤–æ–ª –Ω–∞ –ø–æ–∑–¥—Ä–∞–≤–µ–Ω–∏–µ—Ç–æ –µ \(–ø–æ–∑–¥—Ä–∞–≤[–ø–æ–∑–¥—Ä–∞–≤.startIndex])")
    let üêÆ = "–∫—Ä–∞–≤–∏"

    print("–¥–≤–µ üêÆ")

    let `repeat` = "–ø—Ä–µ–≤–∫–ª—é—á–≤–∞—Ç–µ–ª"
    print(`repeat`)

    // var number = 1
    // while number <= 100 {
    //     print(number)
    //     number += 1
    //     if number < 10 {
    //         continue
    //     }
    //     break
    // }


    // number = 1
    // repeat {
    //     print(number)
    //     number += 1
    // } while number <= 100